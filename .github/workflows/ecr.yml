name: Deploy Docker Image
on:
  push:
    branches:
      - "main"

permissions:
  id-token: write
  contents: read

jobs:
  conditional-job-check-files:
    uses: ./.github/workflows/conditional-check.yml

  deploy-to-aws-ecr:
    runs-on: ubuntu-latest
    # needs: [ conditional-job-check-files]
    # if: needs.conditional-job-check-files.outputs.docker_changed == 'True'
    env:
      ROLE_TO_ASSUME: ${{ secrets.AWS_GITHUB_ACTION_ROLE }}
      ROLE_SESSION_NAME: CI-DEV
      AWS_REGION: us-west-1
      AWS_ACCOUNT_ID: 658825739119
      IMAGE_NAME: auth
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          role-session-name: ${{ env.ROLE_SESSION_NAME }}
          aws-region: ${{ env.AWS_REGION }}
        
      - name: Login to AWS ECR
        run: |
          cd auth
          docker login --username AWS -p $(aws ecr get-login-password --region ${{ env.AWS_REGION }}) ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Check if ECR repository exists
        run: |
          if aws ecr describe-repositories --repository-names ${{ env.IMAGE_NAME }} --region ${{ env.AWS_REGION }};then
            echo "Repo already created"
          else
            aws ecr create-repository --repository-name ${{ env.IMAGE_NAME }} --region ${{ env.AWS_REGION }}    
          fi

      - name: Build Docker Image
        run: |
          cd auth
          docker build -t ${{ env.IMAGE_NAME }} .

      - name: Tag Docker Image
        run: |
          cd auth
          docker tag ${{ env.IMAGE_NAME }}:latest ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_NAME }}:latest

      - name: Push Docker Image to ECR
        run: |
          cd auth
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_NAME }}:latest